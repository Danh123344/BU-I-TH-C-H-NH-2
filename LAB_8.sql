USE BAITHUCHANHSO1_2
GO
/*--1 viết thủ tục thêm mới nhân viên boa gồm: MANV, TENNV, GIOITINH, DIACHI, SODT, EMAIL, PHONG và 1 biến Flag. nếu FLag = 0 thì nhập mới, ngược lại thì cập nhật thông tin nhân viên theo mã, hãy kiểm tra:
-GIOITINH NHẬP VÀO CÓ PHẢI LÀ NAM HOẶC NỮ KHÔNG, NẾU KHÔNG TRẢ VỀ MÃ LỖI 1.
- NGƯỢC LẠI NẾU THOẢ MÃN THÌ CHO PHÉP NHẬP VÀ TRẢ VỀ MÃ LỖI 0.*/
CREATE PROCEDURE SP_THEM_CAPNHAT_NHANVIEN_BOA (
	@MANV NCHAR(10),
	@TENNV NVARCHAR(20),
	@GIOITINH NCHAR(10),
	@DIACHI NVARCHAR(30),
	@SODT NVARCHAR(20),
	@EMAIL NVARCHAR(30),
	@PHONG NVARCHAR(30),
	@FLAG BIT
)
AS
BEGIN
	IF @GIOITINH NOT IN ('NAM', 'NỮ')
	BEGIN
		SELECT 1 AS [MaLoi]
		RETURN
	END	
	IF @FLAG = 0
	BEGIN
		INSERT INTO NHANVIEN (MANV, TENNV, GIOITINH, DIACHI, SDT, EMAIL, PHONG)
		VALUES (@MANV, @TENNV, @GIOITINH, @DIACHI, @SODT, @EMAIL, @PHONG)
	END
	ELSE
	BEGIN
		UPDATE NHANVIEN
		SET TENNV = @TENNV,
			GIOITINH = @GIOITINH,
			DIACHI = @DIACHI,
			SDT = @SODT,
			EMAIL = @EMAIL,
			PHONG = @PHONG
		WHERE MANV = @MANV
	END

	SELECT 0 AS [MaLoi]
END

EXECUTE SP_THEM_CAPNHAT_NHANVIEN_BOA N'NV04', N'NGUYỄN THỊ A' , N'NỮ', N'TPHCM',N'092626521', N'A@GMAIL.COM', N'KẾA TOÁN', 0
SELECT * FROM NHANVIEN
/*2 VIẾT THỦ TỤC THÊM MỚI SẢN PHẨM VỚI CÁC THAM BIẾN MASP, TENHANG, TENSP, SOLUONG,MAUSAC, GIABAN, DONVITINH, MOTA VÀ 1 BIẾN Flag, NẾU FLAG=0 THÌ THÊM MỚI SẢN PHẨM, NGƯỢC LẠI CẬP NHẬT SẢN PHẨM. HÃY KIỂM TRA:
- NẾU TENHANG KHÔNG CÓ TROGN BẢNG HANGXS THÌ TRẢ VỀ MÃ LỖI 1
- NẾU SỐ LƯỢNG <0 THÌ TRẢ VỀ MÃ LỖI 2
- NGƯỢC LẠI TRẢ VỀ MÃ LỖI 0.*/
CREATE PROCEDURE sp_AddOrUpdateSanPham
    @MASP nchar(10),
    @TENHANG nvarchar(20),
    @TENSP nvarchar(20),
    @SOLUONG int,
    @MAUSAC nvarchar(2),
    @GIABAN money,
    @DONVITINH nchar(10),
    @MOTA nvarchar(max),
    @Flag bit
AS
BEGIN
    SET NOCOUNT ON;
    IF NOT EXISTS (SELECT MAHANGSX FROM HANGSX WHERE TENHANG = @TENHANG)
    BEGIN
        SELECT 1 AS ErrorCode, 'TENHANG does not exist in HANGSX' AS ErrorMessage
        RETURN;
    END
    IF @SOLUONG < 0
    BEGIN
        SELECT 2 AS ErrorCode, 'SOLUONG must be greater than or equal to 0' AS ErrorMessage
        RETURN;
    END
    IF @Flag = 0 
    BEGIN
        INSERT INTO SANPHAM (MASP, MAHANGSX, TENSP, SOLUONG, MAUSAC, GIABAN, DONVITINH, MOTA)
        VALUES (@MASP, (SELECT MAHANGSX FROM HANGSX WHERE TENHANG = @TENHANG), @TENSP, @SOLUONG, @MAUSAC, @GIABAN, @DONVITINH, @MOTA)
    END
    ELSE 
    BEGIN
        UPDATE SANPHAM
        SET MAHANGSX = (SELECT MAHANGSX FROM HANGSX WHERE TENHANG = @TENHANG), TENSP = @TENSP, SOLUONG = @SOLUONG, MAUSAC = @MAUSAC, GIABAN = @GIABAN, DONVITINH = @DONVITINH, MOTA = @MOTA
        WHERE MASP = @MASP
    END
    SELECT 0 AS ErrorCode, 'Success' AS ErrorMessage
END
EXEC sp_AddOrUpdateSanPham 'SP06', 'OPPO', 'F5 PLUS', 100, 'X','6000000', 'CHIẾC', 'HÀNG CẬN CAO CẤP', 0
/*3 VIẾT THỦ TỤC XOÁ DỮ LIỆU BẢNG NAHNVIEN VỚI THAM BIẾN LÀ MANV. NẾU MANV CHƯA CÓ THÌ TRẢ VỀ 1, NGƯỢC LẠI XOÁ NHANVIEN VỚI NHANVIEN BỊ XOÁ LÀ MANV VÀ TRẢ VỀ 0(LƯU Ý: XOÁ NHAN VIEN THÌ PHỈA XOÁ CÁC BẢNG NHAP, XUAT MÀ NHÂN VIÊN NÀY THAM GIA)*/
CREATE PROCEDURE XOA_NHANVIEN
    @MANV NCHAR(10)
AS
BEGIN
    IF NOT EXISTS(SELECT * FROM NHANVIEN WHERE MANV = @MANV)
    BEGIN
        RETURN 1
    END
    ELSE
    BEGIN
        BEGIN TRANSACTION
        BEGIN TRY
            DELETE FROM BANGNHAP WHERE MANV = @MANV
            DELETE FROM BANGXUAT WHERE MANV = @MANV
            DELETE FROM NHANVIEN WHERE MANV = @MANV
            COMMIT TRANSACTION
            RETURN 0
        END TRY
        BEGIN CATCH
            ROLLBACK TRANSACTION
            RETURN 1
        END CATCH
    END
END
EXECUTE XOA_NHANVIEN 'NV04'
/*4 VIẾT THỦ TỤC XOÁ DỮ LIỆU BẢNG SANPHAM VỚI THAM BIẾN LÀ MASP. NẾU MASP CHƯA CSO THÌ TRẢ VỀ 1, NGƯỢC LẠI XOÁ SANPHAM VỚI SANPHAM BỊ XOÁ LÀ MASP VÀ TRẢ VỀ 0(LƯU Ý: XOÁ SANPHAM THÌ PHẢI XOÁ CÁC BẢNG NHAP, XUAT MÀ SANPHAM MÀ SANPHAM NÀY CUNG ỨNG)*/
CREATE PROCEDURE XOA_SANPHAM
    @MASP NCHAR(10)
AS
BEGIN
    IF NOT EXISTS(SELECT * FROM SANPHAM WHERE MASP = @MASP)
    BEGIN
        RETURN 1
    END
    ELSE
    BEGIN
        BEGIN TRANSACTION
        BEGIN TRY
            DELETE FROM BANGNHAP WHERE MASP = @MASP
            DELETE FROM BANGXUAT WHERE MASP = @MASP
            DELETE FROM SANPHAM WHERE MASP = @MASP
            COMMIT TRANSACTION
            RETURN 0
        END TRY
        BEGIN CATCH
            ROLLBACK TRANSACTION
            RETURN 1
        END CATCH
    END
END
EXECUTE XOA_SANPHAM'SP06'
/*5 TẠO THỦ TỤC NHẬP LIỆU CHO BẢNG HANGSX, VỚI CÁC THAM BIẾN TRUYỀN VÀO MAHANGSSX, TENHANG, DIACHI, SODT, EMAIL. HÃY KIỂM TRA XEM TENHANG ĐÃ TỒN TẠI TRƯỚC ĐÓ HAY CHƯA. NẾU RỒI TRẢ VỀ MÃ LỖI 1? NẾU CÓ RỒI THÌ KHÔNG CHO NHẬP VÀ TRA VỀ MÃ LỖI 0.*/

CREATE PROCEDURE SP_THEM_HANGSX
(
	@MAHANGSX NCHAR(10),
	@TENHANG NVARCHAR(20),
	@DIACHI NVARCHAR(30),
	@SDT NVARCHAR(20),
	@EMAIL NVARCHAR(30)
)
AS
BEGIN
	IF EXISTS (SELECT * FROM HANGSX WHERE TENHANG = @TENHANG)
	BEGIN
		SELECT 1 AS 'ERROR_CODE', 'Tên hãng sản xuất đã tồn tại trong bảng HANGSX.' AS 'ERROR_MESSAGE'
		RETURN
	END
	ELSE
	BEGIN
		INSERT INTO HANGSX (MAHANGSX, TENHANG, DIACHI, SDT, EMAIL)
		VALUES (@MAHANGSX, @TENHANG, @DIACHI, @SDT, @EMAIL)
		SELECT 0 AS 'ERROR_CODE', 'Thêm dữ liệu vào bảng HANGSX thành công.' AS 'ERROR_MESSAGE'
		RETURN
	END
END
EXECUTE SP_THEM_HANGSX 'H04', 'Apple', 'Cupertino, CA', '1234567890', 'info@apple.com'
/*-6 VIẾT THỦ THỤC NHẬP DỮ LIỆU CHO BẢNG NHAP VỚI CÁC THAM BIẾN SOHDN, MASP, MANV, NGAYNHAP, SOLUONGN, DONGIAN. KIỂM TRA XEM MASP CÓ TỒN TẠI TRONG BẢNG SANPHAM HAY KHÔNG, NẾU KHONG TRẢ VỀ 1. MANV CÓ TỒN TẠI TRONG BẢNG NHANVIEN HAY KHÔNG NẾU KHÔNG  TRẢ VỀ 2? NGƯỢC LẠI THÊM MỚI BẢNG NHAP VÀ TRẢ VỀ 0.*/
CREATE PROCEDURE SP_NHAP_HANG
    @SOHDN NCHAR(10),
    @MASP NCHAR(10),
    @MANV NCHAR(10),
    @NGAYNHAP DATE,
    @SOLUONGN INT,
    @DONGIAN MONEY
AS
BEGIN
    IF NOT EXISTS (SELECT MASP FROM SANPHAM WHERE MASP = @MASP)
    BEGIN
        SELECT 1 AS 'ERROR_CODE', 'Mã sản phẩm không tồn tại trong bảng SANPHAM' AS 'ERROR_MESSAGE'
        RETURN
    END
    IF NOT EXISTS (SELECT MANV FROM NHANVIEN WHERE MANV = @MANV)
    BEGIN
        SELECT 2 AS 'ERROR_CODE', 'Mã nhân viên không tồn tại trong bảng NHANVIEN' AS 'ERROR_MESSAGE'
        RETURN
    END
    INSERT INTO BANGNHAP (SOHDN, MASP, MANV, NGAYNHAP, SOLUONGN, DONGIAN)
    VALUES (@SOHDN, @MASP, @MANV, @NGAYNHAP, @SOLUONGN, @DONGIAN)
    SELECT 0 AS 'ERROR_CODE', 'Thêm mới thành công' AS 'ERROR_MESSAGE'
END
EXEC SP_NHAP_HANG 'N01', 'SP01', 'NV01', '2023-04-18', 10, 50000.0
/* 7VIẾT THỦ TỤC NHẬP DỮ LIỆU CHO BẢNG XUAT VỚI CÁ THAM BIẾN SOHD, MASP, MANV, NGAYXUAT, SOLUONGX,. KIỂM TRA XEM  MASP CÓ TỒN TẠI TRONG BẢNG SANPHAM HAY KHÔNG, NẾU KHÔNG TRẢ VỀ 1? MANV CÓ TỒN TẠI TRONG BẢNG NHANVIEN HAY KHÔNG NẾU KHÔNG TRẢ VỀ 2? SOLUONGX <= SOLUONG NẾU KHÔNG TRẢ VỀ 3? NGƯỢC LẠI THÊM MỚI BẢNG XUAT VÀ TAR VỀ MÃ LỖI 0.*/
CREATE PROCEDURE SP_THEM_XUAT
	@SOHD NCHAR(10),
	@MASP NCHAR(10),
	@MANV NCHAR(10),
	@NGAYXUAT DATE,
	@SOLUONGX INT,
	@ERROR_CODE INT OUTPUT
AS
BEGIN
	DECLARE @EXIST_MASP INT;
	DECLARE @EXIST_MANV INT;
	DECLARE @CHECK_SOLUONG INT;
	SELECT @EXIST_MASP = COUNT(*) FROM SANPHAM WHERE MASP = @MASP;
	IF @EXIST_MASP = 0
	BEGIN
		SET @ERROR_CODE = 1;
		RETURN;
	END
	SELECT @EXIST_MANV = COUNT(*) FROM NHANVIEN WHERE MANV = @MANV;
	IF @EXIST_MANV = 0
	BEGIN
		SET @ERROR_CODE = 2;
		RETURN;
	END

	SELECT @CHECK_SOLUONG = (SOLUONG - @SOLUONGX) FROM SANPHAM WHERE MASP = @MASP;
	IF @CHECK_SOLUONG < 0
	BEGIN
		SET @ERROR_CODE = 3;
		RETURN;
	END
	INSERT INTO BANGXUAT(SOHDX, MASP, MANV, NGAYXUAT, SOLUONGX)
	VALUES (@SOHD, @MASP, @MANV, @NGAYXUAT, @SOLUONGX)

	SET @ERROR_CODE = 0;
END
